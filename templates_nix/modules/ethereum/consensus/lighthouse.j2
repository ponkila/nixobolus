# Nix-Pilobolus - Automated creation of bootable images
# https://github.com/ponkila/Nix-Pilobolus

{#- Paths #}
{%- set eth = data.services.ethereum %}
{%- set lh = eth.clients.lighthouse %}

{#- Defaults #}
{%- set username    = data.user                     | default("validator") %}
{%- set network     = lh.network or eth.network     | default("mainnet") %}
{%- set infra_ip    = lh.infra_ip or eth.infra_ip   | default("127.0.0.1") %}

{#- Options #}
{%- set enable                          = lh.enable                         | default(true) %}
{%- set data_dir                        = lh.data_dir                       | default("/var/mnt/lighthouse") %}
{%- set exec_jwt_secret                 = lh.exec_jwt_secret                | default(data_dir + "/jwt.hex") %}
{%- set exec_port                       = lh.exec_port                      | default(8545) %}
{%- set exec_endpoint                   = lh.exec_endpoint                  | default(infra_ip) %}
{%- set deposit_contract_sync_disable   = lh.deposit_contract_sync_disable  | default(false) %}
{%- set checkpoint_sync_url             = lh.checkpoint_sync_url            | default(none) %}
{%- set slasher_enable                  = lh.slasher_enable                 | default(false) %}
{%- set slasher_history_length          = lh.slasher_history_length         | default(4096) %}
{%- set slasher_max_db_size             = lh.slasher_max_db_size            | default(256) %}
{%- set http_enable                     = lh.http_enable                    | default(true) %}
{%- set http_addr                       = lh.http_addr                      | default(infra_ip) %}
{%- set http_port                       = lh.http_port                      | default(5052) %}
{%- set mev_enable                      = lh.mev_enable                     | default(false) %}
{%- set mev_port                        = lh.mev_port                       | default(18550) %}
{%- set mev_endpoint                    = lh.mev_endpoint                   | default(infra_ip) %}
{%- set metrics_enable                  = lh.metrics_enable                 | default(true) %}
{%- set metrics_addr                    = lh.metrics_addr                   | default(infra_ip) %}
{%- set metrics_port                    = lh.metrics_port                   | default(5054) %}
{%- set prune_payloads_enable           = lh.prune_payloads_enable          | default(true) %}

{ config, pkgs, ... }:

{
    # LIGHTHOUSE
    systemd.services.lighthouse = {
        enable = {{ enable | lower }};

        description = "beacon, {{ network }}, stable";
        requires = [ "network-online.target" ];
        after = [ 
            "network-online.target"
            {%- if mev_enable %}
            "mev-boost.service"
            {%- endif %}
        ];

        serviceConfig = {
            Restart = "always";
            RestartSec = "5s";
            User = "{{ username }}";
            Group = "{{ username }}";
            Type = "simple";
        };

        script = ''${pkgs.lighthouse}/bin/lighthouse bn \
        --datadir {{ data_dir }} \
        --network {{ network }} \
        --prune-payloads {{ prune_payloads_enable }} \

        {#- EXEC #}
        --execution-endpoint http://{{ exec_endpoint }}:{{ exec_port }} \
        --execution-jwt {{ exec_jwt_secret }} \
        
        {#- HTTP #}
        {%- if http_enable %}
        --http \
        --http-address {{ http_addr }} \
        --http-port {{ http_port }} \
        {%- endif %}

        {#- SLASHER #}
        {%- if slasher_enable %}
        --slasher \
        --slasher-history-length {{ slasher_history_length }} \
        --slasher-max-db-size {{ slasher_max_db_size }} \
        {%- endif %}

        {#- METRICS #}
        {%- if metrics_enable %}
        --metrics \
        --metrics-address {{ metrics_addr }} \
        --metrics-port {{ metrics_port }} \
        {%- endif %}

        {#- NON STAKE #}
        {%- if checkpoint_sync_url %}
        --checkpoint-sync-url {{ checkpoint_sync_url }} \
        {%- endif %}
        {%- if not deposit_contract_sync_disable %}
        --disable-deposit-contract-sync \
        {%- endif %}

        {#- MEV BOOST #}
        {%- if mev_enable %}
        --builder http://{{ mev_endpoint }}:{{ mev_port }} \
        {%- endif %}
        '';

        wantedBy = [ "multi-user.target" ];
    };

    # Firewall
    networking.firewall = {
        allowedTCPPorts = [ {{ p2p_udp_port }} ];
        allowedUDPPorts = [ {{ p2p_tcp_port }} {{ rpc_port }}
                            {%- if not monitoring_disable %} {{ monitoring_port }} {%- endif %}
                            {%- if not grpc_gateway_disable %} {{ grpc_gateway_port }} {%- endif %}
                            {%- if pprof %} {{ pprof_port }} {%- endif %} ];
    };
}