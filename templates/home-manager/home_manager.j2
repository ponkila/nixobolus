# Nixobolus - Automated creation of bootable NixOS images
# https://github.com/ponkila/Nixobolus

{#- Paths #}
{%- set home = data.home_manager %}

{#- Defaults #}
{%- set username        = data.user           | default("validator") %}
{%- set state_version   = home.state_version  | default("23.05") %}
{%- set enable          = home.enable         | default(true) %}

{ inputs, outputs, lib, pkgs, config, ... }: 
{
  imports = [ inputs.home-manager.nixosModules.home-manager ];

  home-manager.users.{{ username }} = { pkgs, ... }: {

    home.packages = with pkgs; [
        {%- for package in home.nix_packages %}
        {{ package }}
        {%- endfor %}
    ];

    nixpkgs = {
      config = {
        allowUnfree = true;
        # Workaround for https://github.com/nix-community/home-manager/issues/2942
        allowUnfreePredicate = (_: true);
      };
    };

    nix = {
      package = lib.mkDefault pkgs.nix;
        settings = {
          experimental-features = [ "nix-command" "flakes" "repl-flake" ];
          warn-dirty = false;
        };
    };

    programs = {
        {%- for program in home.programs %}
        {{ program }}.enable = true;
        {%- endfor %}
        home-manager.enable = {{ enable | lower }};
    };

    home.stateVersion = "{{ state_version }}";
  };

  home-manager.useUserPackages = true;
  home-manager.useGlobalPkgs = true;
}
