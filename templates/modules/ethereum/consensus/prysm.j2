# Nixobolus - Automated creation of bootable NixOS images
# https://github.com/ponkila/Nixobolus

{#- Paths #}
{%- set eth = data.services.ethereum %}
{%- set prysm = eth.clients.prysm %}

{#- General #}
{%- set enable = prysm.enable | default(true) | lower %}
{%- set extraArgs = prysm.extraArgs | default([]) %}
{%- set network = prysm.network or eth.network | default(none) %}
{%- set openFirewall = prysm.openFirewall | default(true) | lower %}
{%- set package = prysm.package | default("pkgs.prysm") %}
{#- Mainnet (null) is the default ethereum network. #}
{%- if network in ['mainnet'] %}
    {%- set network = none %}
{%- endif %}

{#- ExtraArgs #}
{%- set extraArgs = prysm.extraArgs | default([]) %}
{#- MEV-Boost #}
{%- set mev             = prysm.mev         | default({}) %}
{%- set mev_enable      = mev.enable        | default(true) %}
{%- set mev_port        = mev.port          | default(18550) %}
{%- set mev_endpoint    = mev.endpoint      | default("127.0.0.1") %}
{#- Slasher #}
{%- set slasher         = prysm.slasher     | default({}) %}
{%- set slasher_enable  = slasher.enable    | default(false) %}
{%- set slasher_history = slasher.history   | default(false) %}
{#- Flags #}
{%- set extraFlags = [
    ("--http-mev-relay=http://" ~ mev_endpoint ~ ":" ~ mev_port, mev_enable),
    ("--slasher", slasher_enable ),
    ("--historical-slasher-node", slasher_history)
] %}
{#- Append #}
{%- for flag in extraFlags %}
    {%- if flag[1] %}
        {%- set _ = extraArgs.append(flag[0]) %}
    {%- endif %}
{%- endfor %}

{#- Args #}
{%- macro prysm_config(prysm) %}
    {%- set items = {
        'checkpoint.sync-url':          prysm.checkpoint_sync_url           | default(none),
        'dataDir':                      prysm.datadir                       | default(none),
        'genesis.beacon-api-url':       prysm.genesis_beacon_api_url        | default(none),
        'jwt-secret':                   prysm.jwtsecret                     | default(""),
        'network':                      network                             | default(none),
        'p2p-tcp-port':                 prysm.p2p_tcp_port                  | default(13000),
        'p2p-udp-port':                 prysm.p2p_udp_port                  | default(12000),
    } %}
    {{- filter_macro(items, items.keys()) }}
{%- endmacro %}

{#- Monitoring #}
{%- set monitoring = prysm.monitoring | default({}) %}
{%- macro monitoring_config(monitoring) %}
    {%- set items = {
        'disable-monitoring':   (not monitoring.enable) | default(true),
        'monitoring-host':      monitoring.addr         | default("127.0.0.1"),
        'monitoring-port':      monitoring.port         | default(8080),
    } %}
    {{- filter_macro(items, items.keys()) }}
{%- endmacro %}

{#- gRPC-Gateway #}
{%- set grpc_gateway = prysm.grpc_gateway | default({}) %}
{%- macro grpc_gateway_config(private_api) %}
    {%- set items = {
        'disable-grpc-gateway': (not grpc_gateway.enable)   | default(true),
        'grpc-gateway-host':    grpc_gateway.addr           | default("127.0.0.1"),
        'grpc-gateway-port':    grpc_gateway.port           | default(3500),
    } %}
    {{- filter_macro(items, items.keys()) }}
{%- endmacro %}

{#- RPC-Authentication #}
{%- set authrpc = prysm.authrpc | default({}) %}
{%- macro authrpc_config(private_api) %}
    {%- set items = {
        'rpc-host': authrpc.addr    | default("127.0.0.1"),
        'rpc-port': authrpc.port    | default(4000),
    } %}
    {{- filter_macro(items, items.keys()) }}
{%- endmacro %}

{#- pprof HTTP-Server #}
{%- set pprof = prysm.pprof | default({}) %}
{%- macro pprof_config(private_api) %}
    {%- set items = {
        'pprof':        pprof.enable    | default(false),
        'pprofaddr':    pprof.addr      | default("127.0.0.1"),
        'pprofport':    pprof.port      | default(6060),
    } %}
    {{- filter_macro(items, items.keys()) }}
{%- endmacro %}

{#- Remove key-value pairs with value of 'none' #}
{#- Also adds double quotes for strings #}
{%- macro filter_macro(config, keys) %}
    {%- for key in keys %}
        {%- if config[key] is not none %}
            {%- if config[key] in ["true", "false"] %}
            {{ key }} = {{ config[key] | lower }};
            {%- else %}
            {{ key }} = {{ config[key] | tojson }};
            {%- endif %}
        {%- endif %}
    {%- endfor %}
{%- endmacro %}

{# Prysm Beacon #}
{ config, pkgs, ... }:
{
    services.ethereum.prysm-beacon.{{ network }} = {
        enable = {{ enable }};
        extraArgs = [
        {%- for arg in extraArgs %}
            {{ arg | tojson }}
        {%- endfor %}
        ];
        openFirewall = {{ openFirewall }};
        package = {{ package }};
        args = {
            {{- authrpc_config(private_api) }}
            {{- grpc_gateway_config(private_api) }}
            {{- monitoring_config(monitoring) }}
            {{- pprof_config(private_api) }}
            {{- prysm_config(prysm) }}
        };
    };
}