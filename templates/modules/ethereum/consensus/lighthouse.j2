# Nixobolus - Automated creation of bootable NixOS images
# https://github.com/ponkila/Nixobolus

{#- Paths -#}
{%- set eth = data.services.ethereum %}
{%- set lighthouse = eth.clients.lighthouse %}

{#- General #}
{%- set username     = data.user                             | default("validator") %}
{%- set network      = lighthouse.network or eth.network     | default("mainnet") %}
{%- set enable       = lighthouse.enable                     | default(true) %}
{%- set openFirewall = lighthouse.openFirewall               | default(true) %}
{%- set infra_ip     = lighthouse.infra_ip or eth.infra_ip   | default("127.0.0.1") %}

{#- Args -#}
{%- set data_dir                        = lighthouse.datadir                        | default("") %}
{%- set exec_jwt_secret                 = lighthouse.exec_jwtsecret                 | default("") %}
{%- set exec_port                       = lighthouse.exec_port                      | default(8545) %}
{%- set exec_endpoint                   = lighthouse.exec_addr                      | default(infra_ip) %}
{%- set deposit_contract_sync_disable   = lighthouse.deposit_contract_sync_disable  | default(false) | lower %}
{%- set checkpoint_sync_url             = lighthouse.checkpoint_sync_url            | default(none) %}
{%- set prune_payloads_enable           = lighthouse.prune_payloads_enable          | default(true)  | lower %}

{#- HTTP-Server -#}
{%- set http        = lighthouse.http   | default({}) %}
{%- set http_enable = http.enable       | default(true) | lower %}
{%- set http_addr   = http.addr         | default(infra_ip) %}
{%- set http_port   = http.port         | default(5052) %}

{#- Metrics -#}
{%- set metrics         = lighthouse.metrics    | default({}) %}
{%- set metrics_enable  = metrics.enable        | default(true) | lower %}
{%- set metrics_addr    = metrics.addr          | default(infra_ip) %}
{%- set metrics_port    = metrics.port          | default(5054) %}

{#- Slasher -#}
{%- set slasher                 = lighthouse.slasher        | default({}) %}
{%- set slasher_enable          = slasher.enable            | default(false) | lower %}
{%- set slasher_history_length  = slasher.history_length    | default(4096) %}
{%- set slasher_max_db_size     = slasher.max_db_size       | default(256) %}

{#- MEV-Boost -#}
{%- set mev             = lighthouse.mev    | default({}) %}
{%- set mev_enable      = mev.enable        | default(true) | lower %}
{%- set mev_port        = mev.port          | default(18550) %}
{%- set mev_endpoint    = mev.endpoint      | default(infra_ip) %}

{# Lighthouse Beacon #}
{ config, pkgs, ... }:
{
    systemd.services.lighthouse = {
        enable = {{ enable | lower }};

        description = "beacon, {{ network }}, stable";
        requires = [ "network-online.target" ];
        after = [ 
            "network-online.target"
            {%- if mev_enable %}
            "mev-boost.service"
            {%- endif %}
        ];

        serviceConfig = {
            Restart = "always";
            RestartSec = "5s";
            User = "{{ username }}";
            Group = "{{ username }}";
            Type = "simple";
        };

        script = ''${pkgs.lighthouse}/bin/lighthouse bn \
        --datadir {{ data_dir }} \
        --network {{ network }} \
        --prune-payloads {{ prune_payloads_enable }} \

        {#- Execution -#}
        --execution-endpoint http://{{ exec_endpoint }}:{{ exec_port }} \
        --execution-jwt {{ exec_jwt_secret }} \
        
        {#- HTTP-Server -#}
        {%- if http_enable %}
        --http \
        --http-address {{ http_addr }} \
        --http-port {{ http_port }} \
        {%- endif %}

        {#- Metrics -#}
        {%- if metrics_enable %}
        --metrics \
        --metrics-address {{ metrics_addr }} \
        --metrics-port {{ metrics_port }} \
        {%- endif %}

        {#- Slasher -#}
        {%- if slasher_enable %}
        --slasher \
        --slasher-history-length {{ slasher_history_length }} \
        --slasher-max-db-size {{ slasher_max_db_size }} \
        {%- endif %}

        {#- MEV-Boost -#}
        {%- if mev_enable %}
        --builder http://{{ mev_endpoint }}:{{ mev_port }} \
        {%- endif %}

        {#- Other -#}
        {%- if checkpoint_sync_url %}
        --checkpoint-sync-url {{ checkpoint_sync_url }} \
        {%- endif %}
        {%- if not deposit_contract_sync_disable %}
        --disable-deposit-contract-sync \
        {%- endif %}
        '';

        wantedBy = [ "multi-user.target" ];
    };

    # Firewall
    {%- if openFirewall %}
    networking.firewall = {
        allowedTCPPorts = [ ];
        allowedUDPPorts = [ {%- if metrics_enable %} {{ metrics_port }} {%- endif %}
                            {%- if http_enable %} {{ http_port }} {%- endif %} ];
    };
    {%- endif %}
}