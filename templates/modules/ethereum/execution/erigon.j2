# Nixobolus - Automated creation of bootable NixOS images
# https://github.com/ponkila/Nixobolus

{#- Paths #}
{%- set eth = data.services.ethereum %}
{%- set erigon = eth.clients.erigon %}

{#- General #}
{%- set enable = erigon.enable | default(true) | lower %}
{%- set extraArgs = erigon.extraArgs | default([]) %}
{%- set network = erigon.network or eth.network | default("mainnet") %}
{%- set openFirewall = erigon.openFirewall | default(true) | lower %}
{%- set package = erigon.package | default("pkgs.erigon") %}
{%- set subVolume = erigon.subVolume | default(true) | lower %}

{#- Args #}
{%- macro erigon_config(erigon) %}
    {%- set items = {
        'chain':        network               | default("mainnet"),
        'datadir':      erigon.dataDir        | default(none),
        'externalcl':   erigon.externalcl     | default(true),
        'port':         erigon.port           | default(30303),
        'snapshots':    erigon.snapshots      | default(true),
        'torrent.port': erigon.torrent_port   | default(42069),
    } %}
    {{- filter_macro(items, items.keys()) }}
{%- endmacro %}

{#- HTTP-Server #}
{%- set http = erigon.http | default({}) %}
{%- macro http_config(http) %}
    {%- set items = {
        'addr':         http.addr           | default("127.0.0.1"),
        'api':          http.api            | default(none),
        'compression':  http.compression    | default(true),
        'enable':       http.enable         | default(true),
        'port':         http.port           | default(8545),
        'trace':        http.corsdomain     | default(true),
        'vhosts':       http.vhosts         | default(["localhost"]),
    } %}
    {{- filter_macro(items, items.keys()) }}
{%- endmacro %}

{#- Websocket #}
{%- set ws = erigon.ws | default({}) %}
{%- macro ws_config(ws) %}
    {%- set items = {
        'compression':  ws.compression     | default(false),
        'enable':       ws.enable          | default(true),
    } %}
    {{- filter_macro(items, items.keys()) }}
{%- endmacro %}

{#- RPC-Authentication #}
{%- set authrpc = erigon.authrpc | default({}) -%}
{%- macro authrpc_config(authrpc) -%}
    {%- set items = {
        'addr':         authrpc.addr        | default("127.0.0.1"),
        'jwtsecret':    authrpc.jwtsecret   | default(none),
        'port':         authrpc.port        | default(8551),
        'vhosts':       authrpc.vhosts      | default(["localhost"]),
    } %}
    {{- filter_macro(items, items.keys()) }}
{%- endmacro -%}

{#- Metrics #}
{%- set metrics = erigon.metrics | default({}) %}
{%- macro metrics_config(metrics) %}
    {%- set items = {
        'addr':     metrics.addr    | default("127.0.0.1"),
        'enable':   metrics.enable  | default(true),
        'port':     metrics.port    | default(6060),
    } %}
    {{- filter_macro(items, items.keys()) }}
{%- endmacro %}

{#- Private API #}
{%- set private_api = erigon.private_api | default({}) %}
{%- macro private_api_config(private_api) %}
    {%- set items = {
        'addr':         private_api.addr        | default("127.0.0.1:9090"),
        'ratelimit':    private_api.ratelimit   | default(31872),
    } %}
    {{- filter_macro(items, items.keys()) }}
{%- endmacro %}

{#- Remove key-value pairs with value of 'none' #}
{#- Also adds double quotes for strings #}
{%- macro filter_macro(config, keys) %}
    {%- for key in keys %}
        {%- if config[key] is not none %}
            {%- if config[key] in ["true", "false"] %}
            {{ key }} = {{ config[key] | lower }};
            {%- else %}
            {{ key }} = {{ config[key] | tojson }};
            {%- endif %}
        {%- endif %}
    {%- endfor %}
{%- endmacro %}

{# Erigon #}
{ config, pkgs, ... }:
{
    services.ethereum.erigon.{{ network }} = {
        enable = {{ enable }};
        extraArgs = {{ extraArgs }};
        openFirewall = {{ openFirewall }};
        package = {{ package }};
        subVolume = {{ subVolume }};
        args = {
            {{- erigon_config(erigon) }}
            http = {
                {{- http_config(http) | indent(4) }}
            };
            ws = {
                {{- ws_config(ws) | indent(4) }}
            };
            authrpc = {
                {{- authrpc_config(authrpc) | indent(4) }}
            };
            metrics = {
                {{- metrics_config(metrics) | indent(4) }}
            };
            private.api = {
                {{- private_api_config(private_api) | indent(4) }}
            };
        };
    };
}